load "ReplyFunctions";
load "../structs";

static addcmd :: ReplyFunctions +> {
	# ReplyFunctions.children push ["tag", name_of_class];
	ReplyFunctions.children push ["addcmd", addcmd]; 
	
	cmdExists(profile, cmd) => exists from {
		exists = false;
		e in profile["commands"] ->> {
			cmd == e[C.cmd] then {
				exists = true;
				return;
			};
		};		
	};
	
	# Return an array of tags and replacement strings, 
	# or throw an error with error code and message.
	foundTag(bot, message, cmd) => r from {
	
		splitMessage := ReplyFunctions.splitMessage(message, cmd[C.cmd], 2);
		cmdExists(bot.profile, splitMessage[1]) == true then {
			throw("ERROR 001: COMMAND EXISTS \n        " .. splitMessage[1]);
		} else {
			bot.addCommand(splitMessage[1], splitMessage[2]);
			r = [["{addcmd}", splitMessage[1]], ["{addcmd_reply}", splitMessage[2]]];
		};
	};
	
	handleError(bot, message, cmd, err) => r from {
		# print(str err[0:26]);
		str err[0:9] == "ERROR 001" then {
			r = "That command already exists";
		} else str err[0:26] == "Error: index out of bounds" {
			r = "Invalid syntax: " .. cmd[C.cmd] .. " <cmd> <reply>"
		} else {
			r = ReplyFunctions.handleError(bot, message, reply, err);
		};
	};
	
};